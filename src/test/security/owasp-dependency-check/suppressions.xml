<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">

    <!-- 
    ===========================================================================
    FALSE POSITIVES
    ===========================================================================
    Suppressions for vulnerabilities incorrectly identified by the tool
    -->

    <suppress>
        <notes>False positive: This is incorrectly flagged due to a naming similarity with a vulnerable component. Our implementation does not use the affected code paths.</notes>
        <gav regex="true">org\.springframework:spring-core:.*</gav>
        <cve>CVE-2023-20861</cve>
    </suppress>

    <suppress>
        <notes>False positive: This vulnerability only affects specific Jackson usage patterns not used in our application. We do not deserialize untrusted data with default typing enabled.</notes>
        <gav regex="true">com\.fasterxml\.jackson\.core:jackson-databind:.*</gav>
        <vulnerabilityName regex="true">.*deserialization.*</vulnerabilityName>
    </suppress>

    <suppress>
        <notes>False positive: This is a vulnerability in the Tomcat Admin interface which we do not expose or use in our embedded configuration.</notes>
        <gav regex="true">org\.apache\.tomcat\.embed:tomcat-embed-core:.*</gav>
        <cve>CVE-2023-28708</cve>
    </suppress>

    <suppress>
        <notes>False positive: This vulnerability only affects applications using React server-side rendering with untrusted templates, which we do not do.</notes>
        <gav regex="true">org\.webjars\.npm:react:.*</gav>
        <cve>CVE-2023-45133</cve>
    </suppress>

    <suppress>
        <notes>False positive: This vulnerability is in a transitive dependency that is not actually used in our application's runtime.</notes>
        <gav regex="true">commons-collections:commons-collections:.*</gav>
        <cve>CVE-2015-6420</cve>
    </suppress>

    <!-- 
    ===========================================================================
    KNOWN ISSUES
    ===========================================================================
    Suppressions for known vulnerabilities that have been assessed and accepted
    -->

    <suppress>
        <notes>Known issue: This vulnerability is in the Spring Framework but is mitigated by our application's configuration. We have disabled the vulnerable feature and implemented input validation. Risk assessment completed on 2023-10-15.</notes>
        <gav regex="true">org\.springframework:spring-web:.*</gav>
        <cve>CVE-2023-20883</cve>
    </suppress>

    <suppress>
        <notes>Known issue: This vulnerability in Jackson Databind is mitigated by our strict input validation and sanitization. We have implemented custom deserializers that prevent the exploitation of this vulnerability. Risk assessment completed on 2023-09-28.</notes>
        <gav regex="true">com\.fasterxml\.jackson\.core:jackson-databind:.*</gav>
        <cve>CVE-2022-42004</cve>
    </suppress>

    <suppress>
        <notes>Known issue: This vulnerability in Tomcat is related to the AJP connector which we do not use in our deployment. Our application only uses HTTP/HTTPS connectors with proper security configurations. Risk assessment completed on 2023-08-15.</notes>
        <gav regex="true">org\.apache\.tomcat\.embed:tomcat-embed-core:.*</gav>
        <cve>CVE-2023-41080</cve>
    </suppress>

    <suppress>
        <notes>Known issue: This vulnerability in React DOM is only exploitable when rendering untrusted HTML directly. Our application uses proper sanitization for all user-generated content and implements CSP headers. Risk assessment completed on 2023-11-05.</notes>
        <gav regex="true">org\.webjars\.npm:react-dom:.*</gav>
        <cve>CVE-2023-43875</cve>
    </suppress>

    <suppress>
        <notes>Known issue: This vulnerability is in a logging library used by a third-party dependency. The vulnerable functionality is not triggered by our usage pattern, and we have implemented logging configuration that mitigates the issue. Risk assessment completed on 2023-07-20.</notes>
        <gav regex="true">org\.apache\.logging\.log4j:log4j-core:.*</gav>
        <cve>CVE-2023-1175</cve>
    </suppress>

    <!-- 
    ===========================================================================
    TEMPORARY SUPPRESSIONS
    ===========================================================================
    Time-limited suppressions for vulnerabilities being addressed
    -->

    <suppress until="2024-01-31">
        <notes>Temporary suppression: This vulnerability in Spring Security will be fixed in the next release of our application, scheduled for January 2024. We have implemented a workaround in our authentication flow that mitigates the issue. Tracked in JIRA ticket SEC-789.</notes>
        <gav regex="true">org\.springframework\.security:spring-security-core:.*</gav>
        <cve>CVE-2023-34035</cve>
    </suppress>

    <suppress until="2024-02-15">
        <notes>Temporary suppression: This vulnerability in Jackson Databind is scheduled for remediation in Sprint 24 (February 2024). Current usage is protected by input validation controls. Tracked in JIRA ticket SEC-790.</notes>
        <gav regex="true">com\.fasterxml\.jackson\.core:jackson-databind:2\.14\.[0-2]</gav>
        <cve>CVE-2023-35116</cve>
    </suppress>

    <suppress until="2024-03-01">
        <notes>Temporary suppression: This vulnerability in Tomcat will be addressed when we upgrade to the latest version in Q1 2024. The vulnerability requires a specific configuration that we currently mitigate with WAF rules. Tracked in JIRA ticket SEC-791.</notes>
        <gav regex="true">org\.apache\.tomcat\.embed:tomcat-embed-core:9\.0\.[0-7][0-9]</gav>
        <cve>CVE-2023-46589</cve>
    </suppress>

    <suppress until="2024-03-15">
        <notes>Temporary suppression: This vulnerability in a transitive dependency will be addressed during the library upgrade scheduled for March 2024. The vulnerability is not directly exploitable in our current implementation. Tracked in JIRA ticket SEC-792.</notes>
        <gav regex="true">io\.netty:netty-handler:4\.1\.[0-7][0-9].*</gav>
        <cve>CVE-2023-44487</cve>
    </suppress>

    <suppress until="2024-02-01">
        <notes>Temporary suppression: This React vulnerability will be fixed when we upgrade our frontend dependencies in Sprint 23 (February 2024). The current implementation includes additional protections that mitigate the risk. Tracked in JIRA ticket SEC-793.</notes>
        <gav regex="true">org\.webjars\.npm:react:16\..*</gav>
        <cve>CVE-2023-45133</cve>
    </suppress>

    <!-- 
    ===========================================================================
    IMS-SPECIFIC SUPPRESSIONS
    ===========================================================================
    Suppressions specific to the Inventory Management System implementation
    -->

    <suppress>
        <notes>IMS-specific: This vulnerability in our market data processing library has been assessed and does not affect our implementation because we do not use the vulnerable component for parsing external data. All market data is pre-validated before processing.</notes>
        <filePath regex="true">.*market-data-processor-.*\.jar</filePath>
        <cve>CVE-2023-23456</cve>
    </suppress>

    <suppress>
        <notes>IMS-specific: This vulnerability in the calculation engine is mitigated by our sandbox implementation that prevents exploitation. The calculation engine runs in a restricted environment with no external network access.</notes>
        <filePath regex="true">.*calculation-engine-.*\.jar</filePath>
        <vulnerabilityName regex="true">.*remote code execution.*</vulnerabilityName>
    </suppress>

    <suppress>
        <notes>IMS-specific: This vulnerability in the position data service is mitigated by our data access controls and input validation. All position data requests are authenticated and authorized at multiple levels.</notes>
        <filePath regex="true">.*position-service-.*\.jar</filePath>
        <cwe>CWE-89</cwe>
    </suppress>

    <suppress until="2024-04-01">
        <notes>IMS-specific: This vulnerability in our inventory calculation module will be addressed in the next major release scheduled for April 2024. Current implementation includes compensating controls that prevent exploitation. Tracked in JIRA ticket IMS-456.</notes>
        <filePath regex="true">.*inventory-calculation-.*\.jar</filePath>
        <cve>CVE-2023-98765</cve>
    </suppress>

    <suppress>
        <notes>IMS-specific: This is a false positive in our custom locate approval workflow implementation. The flagged vulnerability is for a similarly named open-source component that we do not use.</notes>
        <filePath regex="true">.*locate-approval-workflow-.*\.jar</filePath>
        <cve>CVE-2023-87654</cve>
    </suppress>

</suppressions>