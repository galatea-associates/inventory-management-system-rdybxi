# Spring Profile and Core Configuration
spring:
  profiles: staging
  datasource:
    url: jdbc:postgresql://${DB_HOST:ims-staging-db}:${DB_PORT:5432}/${DB_NAME:ims_auth_staging}
    username: ${DB_USERNAME:ims_auth_user}
    password: ${DB_PASSWORD:ims_auth_staging_password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  cloud:
    config:
      enabled: true
      uri: ${CONFIG_SERVER_URL:http://config-server:8888}
      fail-fast: false

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1/auth
  error:
    include-stacktrace: never
    include-message: always
  tomcat:
    max-threads: 100
    max-connections: 5000
    accept-count: 50
    connection-timeout: 30000
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024
  ssl:
    enabled: true
    key-store: ${SSL_KEYSTORE_PATH:/etc/ssl/ims/staging-keystore.p12}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:staging-password}
    key-store-type: PKCS12
    key-alias: ims-auth-staging

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,loggers
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:staging_secret_key_for_testing_only_do_not_use_in_production}
    expiration: 3600
    refresh-expiration: 86400
  password:
    history-count: 24
    max-age-days: 90
    min-length: 12
    complexity-regex: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{12,}$
  account:
    max-failed-attempts: 5
    lock-duration-minutes: 30
  session:
    max-concurrent: 3
    timeout-seconds: 900
  headers:
    content-security-policy: "default-src 'self'; frame-ancestors 'none'; script-src 'self'"
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: 1; mode=block
    strict-transport-security: max-age=31536000; includeSubDomains
    referrer-policy: same-origin
    feature-policy: "camera 'none'; microphone 'none'; geolocation 'none'"

# OAuth Configuration
oauth:
  client-id: ${OAUTH_CLIENT_ID:ims-client-staging}
  client-secret: ${OAUTH_CLIENT_SECRET:staging-client-secret}
  redirect-uris: ${OAUTH_REDIRECT_URIS:https://ims-staging.example.com/callback}
  jwt:
    signing-key: ${OAUTH_JWT_SIGNING_KEY:staging_signing_key_for_testing_only}
  identity-provider:
    url: ${IDP_URL:https://login.microsoftonline.com/}
    tenant-id: ${IDP_TENANT_ID:staging-tenant-id}
  token:
    access-token-validity-seconds: 3600
    refresh-token-validity-seconds: 86400

# Kafka Configuration
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
  consumer:
    group-id: auth-service-staging
    auto-offset-reset: earliest
    max-poll-records: 500
    max-poll-interval-ms: 300000
    session-timeout-ms: 10000
    heartbeat-interval-ms: 3000
  topics:
    user-events: user-events
    auth-events: auth-events
  producer:
    acks: all
    retries: 3
    batch-size: 16384
    buffer-memory: 33554432
    linger-ms: 1
  consumer:
    max-poll-records: 500
    max-poll-interval-ms: 300000
    session-timeout-ms: 10000
    heartbeat-interval-ms: 3000
  security:
    protocol: SSL
  ssl:
    truststore-location: ${KAFKA_TRUSTSTORE_LOCATION:/etc/kafka/secrets/kafka.truststore.jks}
    truststore-password: ${KAFKA_TRUSTSTORE_PASSWORD:staging-truststore-password}
    keystore-location: ${KAFKA_KEYSTORE_LOCATION:/etc/kafka/secrets/kafka.keystore.jks}
    keystore-password: ${KAFKA_KEYSTORE_PASSWORD:staging-keystore-password}
    key-password: ${KAFKA_KEY_PASSWORD:staging-key-password}

# Logging Configuration
logging:
  level:
    root: INFO
    com.ims: INFO
    org.springframework: INFO
    org.springframework.security: INFO
    org.hibernate: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{correlationId}] %-5level %logger{36} - %msg%n'
  file:
    name: /var/log/ims/staging/auth-service.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 10GB

# Resilience4j Configuration
resilience4j.circuitbreaker:
  instances:
    identityProvider:
      slidingWindowSize: 50
      minimumNumberOfCalls: 20
      failureRateThreshold: 50
      waitDurationInOpenState: 30000
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true

resilience4j.retry:
  instances:
    identityProvider:
      maxAttempts: 3
      waitDuration: 1000
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions: java.io.IOException,java.net.ConnectException

resilience4j.ratelimiter:
  instances:
    auth:
      limitForPeriod: 50
      limitRefreshPeriod: 1s
      timeoutDuration: 0s
      registerHealthIndicator: true

# MFA Configuration
mfa:
  enabled: true
  required-roles: ADMIN,COMPLIANCE_OFFICER,TRADER
  totp:
    time-step-seconds: 30
    code-digits: 6
    window-size: 1
  backup-codes:
    enabled: true
    count: 10
    length: 8

# Audit Configuration
audit:
  enabled: true
  events:
    authentication: true
    authorization: true
    user-management: true
  retention-days: 365
  log-format: JSON
  destination: DATABASE,FILE
  file-path: /var/log/ims/staging/audit/auth-audit.log