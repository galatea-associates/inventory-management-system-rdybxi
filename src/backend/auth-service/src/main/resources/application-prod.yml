spring:
  profiles: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:ims-prod-db.internal}:${DB_PORT:5432}/${DB_NAME:ims_auth_prod}
    username: ${DB_USERNAME:ims_auth_prod}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 30
      minimum-idle: 15
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  cloud:
    config:
      enabled: true
      uri: ${CONFIG_SERVER_URL:http://config-server:8888}
      fail-fast: true
      retry:
        max-attempts: 10
        initial-interval: 1000
        max-interval: 10000
        multiplier: 2.0

server:
  port: 8081
  servlet:
    context-path: /api/v1/auth
  error:
    include-stacktrace: never
    include-message: never
  tomcat:
    max-threads: 300
    min-spare-threads: 50
    max-connections: 20000
    connection-timeout: 5000
    accept-count: 100
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048
  ssl:
    enabled: true
    key-store: ${SSL_KEYSTORE_PATH:/etc/ssl/ims/prod-keystore.p12}
    key-store-password: ${SSL_KEYSTORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: ims-auth-prod
    ciphers: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    enabled-protocols: TLSv1.2,TLSv1.3
  http2:
    enabled: true
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 0.1
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 1800
    refresh-expiration: 43200
  password:
    history-count: 24
    max-age-days: 90
    min-length: 12
    complexity-regex: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{12,}$
  account:
    max-failed-attempts: 5
    lock-duration-minutes: 30
  session:
    max-concurrent: 3
    timeout-seconds: 900
  headers:
    content-security-policy: default-src 'self'; frame-ancestors 'none'; script-src 'self'
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: 1; mode=block
    strict-transport-security: max-age=31536000; includeSubDomains; preload
    referrer-policy: same-origin
    feature-policy: "camera 'none'; microphone 'none'; geolocation 'none'"
    permissions-policy: camera=(), microphone=(), geolocation=()
  require-ssl: true
  require-https: true

oauth:
  client-id: ${OAUTH_CLIENT_ID:ims-client-prod}
  client-secret: ${OAUTH_CLIENT_SECRET}
  redirect-uris: ${OAUTH_REDIRECT_URIS:https://ims.example.com/callback}
  jwt:
    signing-key: ${OAUTH_JWT_SIGNING_KEY}
  identity-provider:
    url: ${IDP_URL:https://login.microsoftonline.com/}
    tenant-id: ${IDP_TENANT_ID}
  token:
    access-token-validity-seconds: 1800
    refresh-token-validity-seconds: 43200
    reuse-refresh-tokens: false
    store-auth-approvals: true
    approval-validity-seconds: 43200

kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-prod-1.internal:9092,kafka-prod-2.internal:9092,kafka-prod-3.internal:9092}
  consumer:
    group-id: auth-service-prod
    auto-offset-reset: earliest
    properties:
      max.poll.records: 500
      fetch.min.bytes: 1024
      fetch.max.wait.ms: 500
      enable.auto.commit: false
  topics:
    user-events: user-events
    auth-events: auth-events
  producer:
    acks: all
    retries: 10
    batch-size: 32768
    buffer-memory: 67108864
    compression-type: snappy
    properties:
      linger.ms: 5
      max.in.flight.requests.per.connection: 1
      enable.idempotence: true
  listener:
    concurrency: 10
    ack-mode: MANUAL_IMMEDIATE
  security:
    protocol: SSL
  ssl:
    truststore-location: ${KAFKA_TRUSTSTORE_LOCATION:/etc/kafka/secrets/kafka.truststore.jks}
    truststore-password: ${KAFKA_TRUSTSTORE_PASSWORD}
    keystore-location: ${KAFKA_KEYSTORE_LOCATION:/etc/kafka/secrets/kafka.keystore.jks}
    keystore-password: ${KAFKA_KEYSTORE_PASSWORD}
    key-password: ${KAFKA_KEY_PASSWORD}

logging:
  level:
    root: INFO
    com.ims: INFO
    org.springframework: INFO
    org.springframework.security: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{correlationId}] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/ims/prod/auth-service.log
    max-size: 100MB
    max-history: 60
    total-size-cap: 20GB

resilience4j:
  circuitbreaker:
    instances:
      identityProvider:
        slidingWindowSize: 100
        minimumNumberOfCalls: 50
        failureRateThreshold: 50
        waitDurationInOpenState: 60000
        permittedNumberOfCallsInHalfOpenState: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      identityProvider:
        maxAttempts: 5
        waitDuration: 1000
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions: java.io.IOException,java.net.ConnectException
  ratelimiter:
    instances:
      auth:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 0s
        registerHealthIndicator: true

mfa:
  enabled: true
  required-roles: ADMIN,COMPLIANCE_OFFICER,TRADER,OPERATIONS
  totp:
    time-step-seconds: 30
    code-digits: 6
    window-size: 1
  backup-codes:
    enabled: true
    count: 10
    length: 10
    expiry-days: 30

audit:
  enabled: true
  events:
    authentication: true
    authorization: true
    user-management: true
  retention-days: 730
  log-format: JSON
  destination: DATABASE,FILE
  file-path: /var/log/ims/prod/audit/auth-audit.log
  file-rotation: DAILY
  file-max-history: 365

cors:
  allowed-origins: https://ims.example.com,https://admin.ims.example.com
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type,X-Requested-With,Accept
  allow-credentials: true
  max-age: 3600