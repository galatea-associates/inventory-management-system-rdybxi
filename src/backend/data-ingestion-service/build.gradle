plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.palantir.docker'
}

group = 'com.ims.ingestion'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://repo.reuters.com/maven' }
    maven { url 'https://repo.bloomberg.com/maven' }
}

dependencies {
    implementation project(':common-lib')
    
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka:3.0.5'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'
    
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.0'
    
    implementation 'com.refinitiv.ema:ema:3.8.3.0'
//    implementation 'com.bloomberg.api:bloomberg-api:3.16.1'
    implementation 'org.quickfixj:quickfixj-core:2.3.1'
    
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.15.0'

    implementation files('../../../lib/blpapi-3.25.2-1.jar')
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'com.h2database:h2'
}

bootJar {
    mainClass.set('com.ims.ingestion.DataIngestionServiceApplication')
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Built-By': System.properties['user.name'],
            'Built-Date': new Date(),
            'Built-JDK': System.properties['java.version']
        )
    }
}

docker {
    name "ims/data-ingestion-service:${project.version}"
    files bootJar.archiveFile
    buildArgs([
        'JAR_FILE': "${bootJar.archiveFileName.get()}"
    ])
    labels([
        'maintainer': 'IMS Team',
        'app.name': project.name,
        'app.version': project.version
    ])
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperty 'spring.profiles.active', 'test'
}